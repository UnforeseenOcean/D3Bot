int leavehp;
int dangerleavehp;
int healdanger = 0;
int healbutton1;
int healbutton2;
int healbutton3;
int healbutton4;
int BotDeathCount = 0;
int maxdeathcount;
int skillhp;
int healloop = 0;
int potionhp;
int hplastcount = 0;
int hpminuscount = 0;
time_t hpminustime = 0;
int AttackCount = 0;
int BuffCount = 0;
int SkillCount = 0;
int mainattackcooldown;
int secondaryattackcooldown;
int secondaryattackpause;
int buffduration;
int buffbutton;
int attackskillduration;
int secondaryduration;
int MainAttack;
int attackbutton1;
int attackbutton2;
int attackbutton3;
int attackbutton4;
int followcount = 0;
DWORD firstfollowpoint = 0x00000000;
DWORD secondfollowpoint = 0x00000000;
void BotHeal();
void BotAttack();
void BotFollowPlayer(int startx, int starty);

extern void logprint(std::string text, int ignore);
extern BITMAPCAPTURE globalscreengrab;
extern BOOL CaptureScreen(BITMAPCAPTURE *bmpCapture);
extern int FindAllColor(BITMAPCAPTURE *grab, DWORD mydvmin_Color, DWORD mydvmax_Color, int stepy, int stepx, int stepheight, int stepwidth);
void BotNewGame();
extern int FindDieColor(BITMAPCAPTURE *grab);
extern int FindFollowColor(BITMAPCAPTURE *grab);
extern int rx;
extern int ry;
extern void SetCursorPosition(int x,int y);
extern void BotSleep(int type, int perem1, int perem2, int perem3, int perem4, int perem5, int perem6, int perem7, int perem8, int perem9, int perem10, int perem11, int sleeptime);
extern int movebutton;
extern int DetectPlayersColors(BITMAPCAPTURE *grab, int startx, int starty, int endx, int endy);
extern void MoveButton();
extern int noauth;
extern int SleepTime;
extern int FindAttackColor(BITMAPCAPTURE *grab);
extern int botattackcount;
extern void randomfollow();
extern int randomfollowy;
extern int randomfollowx;